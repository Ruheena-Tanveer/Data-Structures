#here we make use of two stacks one to keep main items and the other to keep track of min element in stack
class minStack:
    def __init__(self):
        self.main=[]
        self.min=[]
    def push(self,data):
        if len(self.main)==0:
            self.min.append(data)
        elif data<=self.main[-1]:
            self.min.append(data)
        else:
            self.min.append(self.main[-1])
        self.main.append(data)
    def pop(self):
        self.min.pop()
        return self.main.pop()
    def minimum(self):
        return self.min[-1]
mini=minStack()
mini.push(20)
mini.push(10)
mini.push(15)
mini.pop()
mini.pop()
print(mini.minimum())
print(mini.main)
print(mini.min)

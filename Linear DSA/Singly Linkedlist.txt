class Node():
    def __init__(self,data,next=None):
        self.data=data
        self.next=None 
class LL():
    def __init__(self):
        self.head=None 
    def add_end(self,data):
        if not self.head:
            self.head=Node(data)
        current=self.head
        while(current.next):
            current=current.next 
        current.next=Node(data) 
    def begin(self,data):
        new_node=Node(data)
        new_node.next=self.head
        self.head=new_node
        return
    def after(self,data,after):
        new_node=Node(data)
        if self.head==None:
            print("list is empty")
            return
        current=self.head
        while current:
            if current.data==after:
                new_node.next=current.next
                current.next=new_node
                return
            current=current.next
        print("node is not present")
    def before(self,data,before):
        new_node=Node(data)
        
    def display(self):
        current=self.head 
        while current:
            print(current.data,end="---->")
            current=current.next
        return
        print("list is empty")
a=LL()
a.add_end(5)
a.begin(15)
a.after(15,5)
a.after(20,15)
a.display()
        
        
        